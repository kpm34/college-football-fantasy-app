# College Football Fantasy App - Project Context

## Project Overview
A fantasy football platform exclusively for Power 4 conferences (SEC, ACC, Big 12, Big Ten) with unique eligibility rules where players can only be started against AP Top-25 teams or in conference games.

## Tech Stack
- Backend: Express.js + TypeScript
- Database: Appwrite (NYC region)
- Frontend: Next.js 15 + Tailwind CSS + Spline 3D
- Data Sources: ESPN API (free) + CollegeFootballData API
- Authentication: Appwrite Auth (planned)

## Key Features
1. Power 4 conferences only
2. 12-week regular season (no playoffs/bowls)
3. Player eligibility: AP Top-25 opponents OR conference games only
4. Real-time scoring via ESPN data
5. 3D visualizations with Spline

## API Endpoints
- GET /api/games - Current week games
- GET /api/games/week/:week - Specific week games
- GET /api/games/eligible - Only eligible games
- GET /api/rankings - AP Top 25
- GET /api/teams - Power 4 teams
- GET /api/eligibility/check - Check game eligibility

## Database Collections (Appwrite)
- games: Game data with scores and status
- rankings: AP Top 25 weekly rankings
- teams: Power 4 team information
- leagues: User leagues (planned)
- rosters: Team rosters (planned)
- lineups: Weekly lineups (planned)

## Current Status
✅ Backend API running with Appwrite integration
✅ Data syncing from ESPN/CFBD to Appwrite
✅ Frontend scaffolded with Next.js + Spline
⏳ User authentication (next)
⏳ League management system
⏳ Draft system
⏳ Scoring engine

## Development Commands
- Backend: npm run server (port 3000)
- Frontend: cd frontend && npm run dev (port 3001)
- Sync data: npm run sync-data
- Test APIs: npm test

## Environment Variables (See .env file for all values)
Primary configuration files:
- Root: `.env` (for Cursor visibility)
- Frontend: `frontend/.env.local` (runtime)
- Production: `.env.production.local`

Key Variables:
- APPWRITE_ENDPOINT=https://nyc.cloud.appwrite.io/v1
- APPWRITE_PROJECT_ID=college-football-fantasy-app
- APPWRITE_DATABASE_ID=college-football-fantasy
- CFBD_API_KEY=configured (primary + backup)
- AI_GATEWAY_API_KEY=configured
- EDGE_CONFIG=configured (feature flags)
- INNGEST keys for background jobs

All collection names prefixed with NEXT_PUBLIC_APPWRITE_COLLECTION_*

## Spline Integration
- Use @splinetool/react-spline for 3D scenes
- Dynamic imports to avoid SSR issues
- Scene ideas: Stadium, trophies, draft board, team logos

## Code Style
- TypeScript strict mode
- Functional components with hooks
- Tailwind for styling
- Async/await for promises
- Proper error handling