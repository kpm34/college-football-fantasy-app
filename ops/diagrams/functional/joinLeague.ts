#!/usr/bin/env tsx
import fs from 'node:fs'
import path from 'node:path'

const OUTPUT_DIR = path.join(process.cwd(), 'docs/diagrams/functional')
const OUTPUT_FILE = path.join(OUTPUT_DIR, 'join-league.md')

function generateJoinLeagueDiagrams() {
  const content: string[] = []
  
  // Header
  content.push('# Join League Flow')
  content.push('')
  content.push('## Overview')
  content.push('League joining flow with multiple entry points: browse, search, and invite links.')
  content.push('')
  
  // Related files
  content.push('## Related Files')
  content.push('- `/app/api/leagues/join/route.ts` - Join league API')
  content.push('- `/app/api/leagues/search/route.ts` - Search leagues API')
  content.push('- `/app/(dashboard)/league/join/page.tsx` - Join league UI')
  content.push('- `/app/invite/[leagueId]/page.tsx` - Invite link handler')
  content.push('- `/lib/db/leagues.ts` - League DAL')
  content.push('- `/lib/db/league_memberships.ts` - Membership DAL')
  content.push('')
  
  // Flowchart
  content.push('## User Flow')
  content.push('```mermaid')
  content.push('flowchart TB')
  content.push('  classDef user fill:#fef3c7,stroke:#f59e0b,stroke-width:2,color:#92400e')
  content.push('  classDef search fill:#e0e7ff,stroke:#6366f1,stroke-width:2,color:#312e81')
  content.push('  classDef validate fill:#fee2e2,stroke:#ef4444,stroke-width:2,color:#7f1d1d')
  content.push('  classDef api fill:#fce7f3,stroke:#ec4899,stroke-width:2,color:#831843')
  content.push('  classDef db fill:#d1fae5,stroke:#10b981,stroke-width:2,color:#064e3b')
  content.push('  ')
  content.push('  Start([User wants to join]):::user')
  content.push('  ')
  content.push('  subgraph Entry Points')
  content.push('    Browse[Browse Public]:::search')
  content.push('    Search[Search by Name]:::search')
  content.push('    Invite[Invite Link]:::search')
  content.push('  end')
  content.push('  ')
  content.push('  LeagueList[League List]:::search')
  content.push('  SelectLeague[Select League]:::user')
  content.push('  ')
  content.push('  CheckAuth{Authenticated?}:::validate')
  content.push('  Login[Redirect to Login]:::user')
  content.push('  ')
  content.push('  CheckPrivate{Private League?}:::validate')
  content.push('  PasswordModal[Enter Password]:::user')
  content.push('  ')
  content.push('  CheckCapacity{Has Space?}:::validate')
  content.push('  ShowFull[League Full Error]:::validate')
  content.push('  ')
  content.push('  CheckMember{Already Member?}:::validate')
  content.push('  ShowMember[Already Joined]:::validate')
  content.push('  ')
  content.push('  JoinAPI[POST /api/leagues/join]:::api')
  content.push('  ')
  content.push('  CreateMembership[Create Membership]:::db')
  content.push('  CreateTeam[Create Fantasy Team]:::db')
  content.push('  UpdateCount[Update League Count]:::db')
  content.push('  LogActivity[Log Join Event]:::db')
  content.push('  ')
  content.push('  Success[League Dashboard]:::user')
  content.push('  ')
  content.push('  Start --> Entry Points')
  content.push('  Browse --> LeagueList')
  content.push('  Search --> LeagueList')
  content.push('  Invite --> CheckAuth')
  content.push('  ')
  content.push('  LeagueList --> SelectLeague')
  content.push('  SelectLeague --> CheckAuth')
  content.push('  ')
  content.push('  CheckAuth -->|No| Login')
  content.push('  CheckAuth -->|Yes| CheckPrivate')
  content.push('  Login --> CheckPrivate')
  content.push('  ')
  content.push('  CheckPrivate -->|Yes| PasswordModal')
  content.push('  CheckPrivate -->|No| CheckCapacity')
  content.push('  PasswordModal --> CheckCapacity')
  content.push('  ')
  content.push('  CheckCapacity -->|Full| ShowFull')
  content.push('  CheckCapacity -->|Space| CheckMember')
  content.push('  ')
  content.push('  CheckMember -->|Yes| ShowMember')
  content.push('  CheckMember -->|No| JoinAPI')
  content.push('  ')
  content.push('  JoinAPI --> CreateMembership')
  content.push('  CreateMembership --> CreateTeam')
  content.push('  CreateTeam --> UpdateCount')
  content.push('  UpdateCount --> LogActivity')
  content.push('  LogActivity --> Success')
  content.push('```')
  content.push('')
  
  // Sequence Diagram
  content.push('## Sequence Diagram')
  content.push('```mermaid')
  content.push('sequenceDiagram')
  content.push('  participant U as User')
  content.push('  participant UI as Join UI')
  content.push('  participant API as API Routes')
  content.push('  participant Auth as Auth Service')
  content.push('  participant DAL as Data Layer')
  content.push('  participant DB as Database')
  content.push('  ')
  content.push('  alt Browse/Search')
  content.push('    U->>UI: Browse leagues')
  content.push('    UI->>API: GET /api/leagues/search')
  content.push('    API->>DAL: Query public leagues')
  content.push('    DAL->>DB: SELECT leagues')
  content.push('    DB-->>UI: League list')
  content.push('    U->>UI: Select league')
  content.push('  else Invite Link')
  content.push('    U->>UI: Click invite link')
  content.push('    UI->>API: GET /api/leagues/invite')
  content.push('    API->>DAL: Validate invite')
  content.push('    DAL->>DB: SELECT leagues, invites')
  content.push('    DB-->>UI: League details')
  content.push('  end')
  content.push('  ')
  content.push('  UI->>Auth: Check authentication')
  content.push('  ')
  content.push('  alt Not Authenticated')
  content.push('    Auth-->>UI: Not logged in')
  content.push('    UI-->>U: Redirect to login')
  content.push('    U->>UI: Login and return')
  content.push('  end')
  content.push('  ')
  content.push('  alt Private League')
  content.push('    UI-->>U: Request password')
  content.push('    U->>UI: Enter password')
  content.push('  end')
  content.push('  ')
  content.push('  UI->>API: POST /api/leagues/join')
  content.push('  API->>DAL: Validate join request')
  content.push('  ')
  content.push('  DAL->>DB: Check capacity')
  content.push('  DAL->>DB: Check membership')
  content.push('  ')
  content.push('  alt Can Join')
  content.push('    DAL->>DB: INSERT league_memberships')
  content.push('    DAL->>DB: INSERT fantasy_teams')
  content.push('    DAL->>DB: UPDATE leagues.current_teams')
  content.push('    DAL->>DB: INSERT activity_log')
  content.push('    DAL-->>API: Success')
  content.push('    API-->>UI: Joined')
  content.push('    UI-->>U: Redirect to league')
  content.push('  else Cannot Join')
  content.push('    DAL-->>API: Error reason')
  content.push('    API-->>UI: Error message')
  content.push('    UI-->>U: Show error')
  content.push('  end')
  content.push('```')
  content.push('')
  
  // Data Interaction Table
  content.push('## Data Interactions')
  content.push('')
  content.push('| Collection | Operation | Attributes | Notes |')
  content.push('|------------|-----------|------------|-------|')
  content.push('| `leagues` | READ | `$id`, `name`, `is_public`, `current_teams`, `max_teams` | Find joinable leagues |')
  content.push('| `leagues` | UPDATE | `current_teams` | Increment member count |')
  content.push('| `invites` | READ | `invite_code`, `league_id`, `expires_at` | Validate invite links |')
  content.push('| `invites` | UPDATE | `uses`, `accepted_at` | Track invite usage |')
  content.push('| `league_memberships` | READ | `league_id`, `client_id` | Check existing membership |')
  content.push('| `league_memberships` | CREATE | `league_id`, `client_id`, `role=member`, `status=active` | Add new member |')
  content.push('| `fantasy_teams` | CREATE | `league_id`, `owner_client_id`, `name` | Create user\'s team |')
  content.push('| `activity_log` | CREATE | `action=league_joined`, `league_id`, `client_id` | Track join event |')
  content.push('')
  
  // Validation Rules
  content.push('## Validation Rules')
  content.push('')
  content.push('### Join Requirements')
  content.push('- User must be authenticated')
  content.push('- League must have space (current_teams < max_teams)')
  content.push('- User cannot already be a member')
  content.push('- Private leagues require valid password or invite')
  content.push('- League must be in "open" or "drafting" status')
  content.push('- Invite must not be expired')
  content.push('')
  
  // Error States
  content.push('## Error States')
  content.push('- `401` - User not authenticated')
  content.push('- `403` - Wrong password / Invalid invite')
  content.push('- `404` - League not found')
  content.push('- `409` - Already a member / League full')
  content.push('- `410` - League closed / Draft completed')
  content.push('')
  
  return content.join('\n')
}

// Ensure directory exists
fs.mkdirSync(OUTPUT_DIR, { recursive: true })

// Generate and write content
const content = generateJoinLeagueDiagrams()
fs.writeFileSync(OUTPUT_FILE, content)

console.log(`âœ… Generated: ${OUTPUT_FILE}`)
