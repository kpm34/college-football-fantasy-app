/**
 * STORAGE BUCKETS SCHEMA
 * 
 * Defines all file storage buckets, their permissions, and configurations.
 * This ensures consistent file upload/download policies across the app.
 */

export interface StorageBucket {
  bucketId: string;
  name: string;
  description: string;
  permissions: {
    read: string[]; // roles that can read files
    write: string[]; // roles that can upload files
    delete: string[]; // roles that can delete files
  };
  settings: {
    maximumFileSize: number; // bytes
    allowedFileExtensions: string[];
    encryption?: boolean;
    antivirus?: boolean;
  };
  purpose: 'user-content' | 'system-assets' | 'temp-files' | 'exports';
  retention?: {
    enabled: boolean;
    days: number; // auto-delete after X days
  };
}

/**
 * COLLEGE FOOTBALL FANTASY STORAGE BUCKETS
 */
export const STORAGE_SCHEMA: Record<string, StorageBucket> = {
  // User Profile Assets
  'user-avatars': {
    bucketId: 'user-avatars',
    name: 'User Avatars',
    description: 'User profile pictures and team logos',
    permissions: {
      read: ['any'], // Public read for avatars
      write: ['role:user'], // Users can upload own avatars
      delete: ['role:user', 'role:admin'] // Users can delete own, admins all
    },
    settings: {
      maximumFileSize: 5 * 1024 * 1024, // 5MB
      allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif', 'webp'],
      encryption: false, // Public images don't need encryption
      antivirus: true
    },
    purpose: 'user-content'
  },

  'team-logos': {
    bucketId: 'team-logos',
    name: 'Fantasy Team Logos',
    description: 'Custom logos uploaded by fantasy team owners',
    permissions: {
      read: ['any'], // Public read
      write: ['role:user'], // Team owners can upload
      delete: ['role:user', 'role:admin']
    },
    settings: {
      maximumFileSize: 2 * 1024 * 1024, // 2MB
      allowedFileExtensions: ['jpg', 'jpeg', 'png', 'svg', 'webp'],
      encryption: false,
      antivirus: true
    },
    purpose: 'user-content'
  },

  // College Football Assets
  'player-photos': {
    bucketId: 'player-photos',
    name: 'Player Photos',
    description: 'College player headshots and photos',
    permissions: {
      read: ['any'], // Public player photos
      write: ['role:admin', 'role:system'], // Only admins/system can upload
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 10 * 1024 * 1024, // 10MB for high-res photos
      allowedFileExtensions: ['jpg', 'jpeg', 'png', 'webp'],
      encryption: false,
      antivirus: true
    },
    purpose: 'system-assets'
  },

  'team-assets': {
    bucketId: 'team-assets',
    name: 'College Team Assets',
    description: 'Official college team logos, colors, and branding assets',
    permissions: {
      read: ['any'], // Public team assets
      write: ['role:admin', 'role:system'],
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 5 * 1024 * 1024, // 5MB
      allowedFileExtensions: ['jpg', 'jpeg', 'png', 'svg', 'webp'],
      encryption: false,
      antivirus: true
    },
    purpose: 'system-assets'
  },

  // Data Import/Export
  'data-imports': {
    bucketId: 'data-imports',
    name: 'Data Import Files',
    description: 'CSV, JSON files for bulk data imports',
    permissions: {
      read: ['role:admin'],
      write: ['role:admin', 'role:system'],
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 100 * 1024 * 1024, // 100MB for large datasets
      allowedFileExtensions: ['csv', 'json', 'xlsx', 'txt'],
      encryption: true, // Sensitive data
      antivirus: true
    },
    purpose: 'system-assets',
    retention: {
      enabled: true,
      days: 30 // Auto-delete imports after 30 days
    }
  },

  'league-exports': {
    bucketId: 'league-exports',
    name: 'League Export Files',
    description: 'Generated league reports, CSV exports for commissioners',
    permissions: {
      read: ['role:user'], // League members can download
      write: ['role:system'], // Generated by system
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 50 * 1024 * 1024, // 50MB
      allowedFileExtensions: ['csv', 'pdf', 'xlsx', 'json'],
      encryption: true, // League data should be encrypted
      antivirus: false // System-generated files
    },
    purpose: 'exports',
    retention: {
      enabled: true,
      days: 90 // Keep exports for 90 days
    }
  },

  // Temporary Files
  'draft-uploads': {
    bucketId: 'draft-uploads',
    name: 'Draft Upload Files',
    description: 'Temporary files during draft imports (CSV roster uploads, etc.)',
    permissions: {
      read: ['role:user'],
      write: ['role:user'],
      delete: ['role:user', 'role:admin']
    },
    settings: {
      maximumFileSize: 10 * 1024 * 1024, // 10MB
      allowedFileExtensions: ['csv', 'txt', 'json'],
      encryption: true,
      antivirus: true
    },
    purpose: 'temp-files',
    retention: {
      enabled: true,
      days: 7 // Clean up draft files weekly
    }
  },

  // System Files
  'app-assets': {
    bucketId: 'app-assets',
    name: 'Application Assets',
    description: 'Static assets, icons, backgrounds for the application',
    permissions: {
      read: ['any'], // Public app assets
      write: ['role:admin'],
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 20 * 1024 * 1024, // 20MB for videos/animations
      allowedFileExtensions: ['jpg', 'jpeg', 'png', 'svg', 'webp', 'mp4', 'webm', 'gif'],
      encryption: false,
      antivirus: false // Static app assets
    },
    purpose: 'system-assets'
  },

  'backup-files': {
    bucketId: 'backup-files', 
    name: 'Backup Files',
    description: 'Database backups and system snapshots',
    permissions: {
      read: ['role:admin'],
      write: ['role:system'],
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 1024 * 1024 * 1024, // 1GB for database backups
      allowedFileExtensions: ['json', 'sql', 'gz', 'zip'],
      encryption: true, // Backups must be encrypted
      antivirus: false
    },
    purpose: 'system-assets',
    retention: {
      enabled: true,
      days: 365 // Keep backups for 1 year
    }
  },

  // Error Logs and Debugging
  'error-logs': {
    bucketId: 'error-logs',
    name: 'Error Log Files',
    description: 'Application error logs and crash dumps',
    permissions: {
      read: ['role:admin'],
      write: ['role:system'],
      delete: ['role:admin']
    },
    settings: {
      maximumFileSize: 50 * 1024 * 1024, // 50MB per log file
      allowedFileExtensions: ['log', 'txt', 'json'],
      encryption: true,
      antivirus: false
    },
    purpose: 'system-assets',
    retention: {
      enabled: true,
      days: 60 // Keep error logs for 60 days
    }
  }
};

/**
 * BUCKET USAGE POLICIES
 */
export const BUCKET_POLICIES = {
  // File naming conventions
  naming: {
    'user-avatars': 'user-{userId}-{timestamp}.{ext}',
    'team-logos': 'team-{teamId}-{timestamp}.{ext}',
    'player-photos': 'player-{playerId}-{type}.{ext}',
    'league-exports': 'league-{leagueId}-{type}-{date}.{ext}',
    'draft-uploads': 'draft-{leagueId}-{userId}-{timestamp}.{ext}'
  },
  
  // Upload limits per user role
  quotas: {
    'role:user': {
      daily: 20, // files per day
      total: 100 * 1024 * 1024 // 100MB total storage
    },
    'role:admin': {
      daily: 1000,
      total: 10 * 1024 * 1024 * 1024 // 10GB
    }
  },
  
  // Content validation rules
  validation: {
    images: {
      minWidth: 32,
      maxWidth: 4096,
      minHeight: 32, 
      maxHeight: 4096,
      allowedFormats: ['JPEG', 'PNG', 'WebP', 'SVG']
    },
    documents: {
      maxPages: 100, // for PDF files
      scanForMalware: true
    }
  }
};

/**
 * BUCKET ANALYTICS AND MONITORING
 */
export const BUCKET_MONITORING = {
  // Storage usage alerts
  alerts: {
    storageUsage: 0.85, // Alert at 85% capacity
    uploadRate: 1000, // files per hour
    errorRate: 0.05 // 5% upload error rate
  },
  
  // Metrics to track
  metrics: [
    'total_files',
    'total_size',
    'uploads_per_day',
    'downloads_per_day',
    'error_rate',
    'average_file_size'
  ],
  
  // Backup and disaster recovery
  backup: {
    enabled: true,
    frequency: 'daily',
    retention: 30, // days
    crossRegion: true
  }
};

/**
 * HELPER FUNCTIONS
 */
export function getBucketsByPurpose(purpose: StorageBucket['purpose']): StorageBucket[] {
  return Object.values(STORAGE_SCHEMA).filter(bucket => bucket.purpose === purpose);
}

export function getBucketsWithRetention(): StorageBucket[] {
  return Object.values(STORAGE_SCHEMA).filter(bucket => bucket.retention?.enabled);
}

export function calculateTotalQuota(role: string): { daily: number; total: number } {
  const policy = BUCKET_POLICIES.quotas[role as keyof typeof BUCKET_POLICIES.quotas];
  return policy || { daily: 5, total: 10 * 1024 * 1024 }; // Default 5 files/day, 10MB
}

export function validateFileUpload(
  bucketId: string, 
  fileName: string, 
  fileSize: number, 
  fileType: string
): { valid: boolean; errors: string[] } {
  const bucket = STORAGE_SCHEMA[bucketId];
  const errors: string[] = [];
  
  if (!bucket) {
    return { valid: false, errors: ['Bucket not found'] };
  }
  
  // Check file size
  if (fileSize > bucket.settings.maximumFileSize) {
    errors.push(`File size ${fileSize} exceeds maximum ${bucket.settings.maximumFileSize}`);
  }
  
  // Check file extension
  const extension = fileName.split('.').pop()?.toLowerCase();
  if (extension && !bucket.settings.allowedFileExtensions.includes(extension)) {
    errors.push(`File type .${extension} not allowed. Allowed: ${bucket.settings.allowedFileExtensions.join(', ')}`);
  }
  
  return { valid: errors.length === 0, errors };
}

export default STORAGE_SCHEMA;