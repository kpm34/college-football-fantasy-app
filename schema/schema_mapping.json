{
  "activity_log": {"action":"keep","target":"activity_log","notes":"Audit trail; keep. Remove inviteToken remnants."},
  "auction_bids": {"action":"merge","target":"bids","notes":"Merge into bids (auction_id,fantasy_team_id,amount,timestamp)."},
  "auction_sessions": {"action":"merge","target":"drafts","notes":"Represent auction sessions via drafts.type='auction' + draft_states."},
  "auctions": {"action":"keep","target":"auctions","notes":"Auction lots tied to a draft."},
  "bids": {"action":"keep","target":"bids","notes":"All bids for an auction lot."},
  "college_players": {"action":"keep","target":"college_players","notes":"Use school_id FK (rename team→school_id)."},
  "draft_events": {"action":"keep","target":"draft_events","notes":"Single timeline incl. picks."},
  "draft_picks": {"action":"merge","target":"draft_events","notes":"Convert to type='pick'."},
  "draft_states": {"action":"keep","target":"draft_states","notes":"Live on‑clock state."},
  "drafts": {"action":"keep","target":"drafts","notes":"Unify snake & auction; add is_mock."},
  "editor_sessions": {"action":"drop","target":null,"notes":"Dev telemetry; drop or move out of prod DB."},
  "file_changes": {"action":"drop","target":null,"notes":"Dev logs; drop or move out."},
  "games": {"action":"keep","target":"games","notes":"Normalize home/away school FKs."},
  "invites": {"action":"keep","target":"invites","notes":"League invites; token unique."},
  "league_memberships": {"action":"keep","target":"league_memberships","notes":"(league_id,client_id) unique."},
  "leagues": {"action":"keep","target":"leagues","notes":"Keep; rename fields to snake_case."},
  "lineups": {"action":"keep","target":"lineups","notes":"Rename rosterId→fantasy_team_id; weekly lineup."},
  "matchups": {"action":"keep_define","target":"matchups","notes":"Define schema; absorb scores."},
  "meshy_jobs": {"action":"keep","target":"meshy_jobs","notes":"3D mascot jobs."},
  "message_templates": {"action":"drop","target":null,"notes":"Out of scope."},
  "migrations": {"action":"drop","target":null,"notes":"Use file‑based migrator; optional."},
  "mock_draft_participants": {"action":"merge","target":"drafts","notes":"Store participants[] on draft or infer from memberships."},
  "mock_draft_picks": {"action":"merge","target":"draft_events","notes":"Same as picks under mock draft."},
  "mock_drafts": {"action":"merge","target":"drafts","notes":"Use drafts with is_mock=true."},
  "model_inputs": {"action":"merge","target":"model_runs","notes":"Embed into model_runs.inputs (JSON)."},
  "model_versions": {"action":"keep","target":"model_versions","notes":"Versioning of model artifacts."},
  "player_projections": {"action":"merge","target":"projections","notes":"Unified projections with period + version + source."},
  "player_stats": {"action":"keep","target":"player_stats","notes":"Per‑game stats."},
  "projection_run_metrics": {"action":"merge","target":"model_runs","notes":"Embed as model_runs.metrics (JSON)."},
  "projection_runs": {"action":"keep_rename","target":"model_runs","notes":"Rename to model_runs."},
  "projections_weekly": {"action":"merge","target":"projections","notes":"Unified projections (period='weekly')."},
  "projections_yearly": {"action":"merge","target":"projections","notes":"Unified projections (period='yearly')."},
  "rankings": {"action":"keep","target":"rankings","notes":"Poll rankings; keep."},
  "scores": {"action":"merge","target":"matchups","notes":"Move points into matchups/lineups."},
  "scoring": {"action":"drop","target":null,"notes":"Use leagues.scoring_rules or league_settings later."},
  "sync_status": {"action":"drop","target":null,"notes":"Pipeline telemetry; drop/move out."},
  "team_budgets": {"action":"merge","target":"fantasy_teams","notes":"Carry budget fields on fantasy_teams."},
  "teams": {"action":"rename","target":"schools","notes":"Rename and index slug."},
  "transactions": {"action":"keep","target":"transactions","notes":"Add|drop|waiver|trade|commissioner|faab; payload JSON."},
  "user_custom_projections": {"action":"merge","target":"projections","notes":"source='custom', client_id set."},
  "user_teams": {"action":"rename","target":"fantasy_teams","notes":"Team per league; remove players string, use roster_slots."},
  "users": {"action":"rename","target":"clients","notes":"Account profile linked to auth_user_id."}
}
