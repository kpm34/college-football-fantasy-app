/**
 * AUTO-GENERATED TYPES
 * 
 * Generated from schema/schema.ts
 * Do not edit this file directly - run 'npm run generate:types' instead
 */

// Schema version for compatibility checking
export const SCHEMA_VERSION = '1.0.0';

/**
 * Player roster data from Power 4 conferences
 */
export interface CollegePlayers {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Player full name */
  name: string;
  /** Playing position (QB, RB, WR, etc.) */
  position: string;
  /** Team abbreviation */
  team: string;
  /** Conference (SEC, ACC, Big 12, Big Ten) */
  conference: string;
  /** Jersey number */
  jerseyNumber: number | undefined;
  /** Height (e.g., 6-2) */
  height: string | undefined;
  /** Weight in pounds */
  weight: number | undefined;
  /** Academic year (FR, SO, JR, SR) */
  year: string | undefined;
  /** Fantasy eligibility status */
  eligible: boolean | undefined;
  /** Current season fantasy points */
  fantasy_points: number | undefined;
  /** Total season points */
  season_fantasy_points: number | undefined;
  /** Position on depth chart */
  depth_chart_order: number | undefined;
  /** Last projection calculation */
  last_projection_update: Date | string | undefined;
  /** CFBD API player ID */
  external_id: string | undefined;
  /** Player headshot URL */
  image_url: string | undefined;
  /** Season statistics JSON */
  stats: string | undefined;
}

/**
 * Data required to create a new college players
 */
export interface CreateCollegePlayers {
  /** Player full name */
  name: string;
  /** Playing position (QB, RB, WR, etc.) */
  position: string;
  /** Team abbreviation */
  team: string;
  /** Conference (SEC, ACC, Big 12, Big Ten) */
  conference: string;
  /** Jersey number */
  jerseyNumber: number | undefined;
  /** Height (e.g., 6-2) */
  height: string | undefined;
  /** Weight in pounds */
  weight: number | undefined;
  /** Academic year (FR, SO, JR, SR) */
  year: string | undefined;
  /** Position on depth chart */
  depth_chart_order: number | undefined;
  /** Last projection calculation */
  last_projection_update: Date | string | undefined;
  /** CFBD API player ID */
  external_id: string | undefined;
  /** Player headshot URL */
  image_url: string | undefined;
  /** Season statistics JSON */
  stats: string | undefined;
}

/**
 * Data for updating a college players
 */
export interface UpdateCollegePlayers {
  /** Player full name */
  name?: string | undefined;
  /** Playing position (QB, RB, WR, etc.) */
  position?: string | undefined;
  /** Team abbreviation */
  team?: string | undefined;
  /** Conference (SEC, ACC, Big 12, Big Ten) */
  conference?: string | undefined;
  /** Jersey number */
  jerseyNumber?: number | undefined;
  /** Height (e.g., 6-2) */
  height?: string | undefined;
  /** Weight in pounds */
  weight?: number | undefined;
  /** Academic year (FR, SO, JR, SR) */
  year?: string | undefined;
  /** Fantasy eligibility status */
  eligible?: boolean | undefined;
  /** Current season fantasy points */
  fantasy_points?: number | undefined;
  /** Total season points */
  season_fantasy_points?: number | undefined;
  /** Position on depth chart */
  depth_chart_order?: number | undefined;
  /** Last projection calculation */
  last_projection_update?: Date | string | undefined;
  /** CFBD API player ID */
  external_id?: string | undefined;
  /** Player headshot URL */
  image_url?: string | undefined;
  /** Season statistics JSON */
  stats?: string | undefined;
}

/**
 * Power 4 conference team information
 */
export interface Teams {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Full team name */
  name: string;
  /** Team abbreviation */
  abbreviation: string;
  /** Conference affiliation */
  conference: string;
  /** Division within conference */
  division: string | undefined;
  /** Primary team color (hex) */
  color: string | undefined;
  /** Secondary team color (hex) */
  alt_color: string | undefined;
  /** Team logo URL */
  logo: string | undefined;
  /** Team mascot name */
  mascot: string | undefined;
  /** Home stadium name */
  venue: string | undefined;
  /** City, State */
  location: string | undefined;
}

/**
 * Data required to create a new teams
 */
export interface CreateTeams {
  /** Full team name */
  name: string;
  /** Team abbreviation */
  abbreviation: string;
  /** Conference affiliation */
  conference: string;
  /** Division within conference */
  division: string | undefined;
  /** Primary team color (hex) */
  color: string | undefined;
  /** Secondary team color (hex) */
  alt_color: string | undefined;
  /** Team logo URL */
  logo: string | undefined;
  /** Team mascot name */
  mascot: string | undefined;
  /** Home stadium name */
  venue: string | undefined;
  /** City, State */
  location: string | undefined;
}

/**
 * Data for updating a teams
 */
export interface UpdateTeams {
  /** Full team name */
  name?: string | undefined;
  /** Team abbreviation */
  abbreviation?: string | undefined;
  /** Conference affiliation */
  conference?: string | undefined;
  /** Division within conference */
  division?: string | undefined;
  /** Primary team color (hex) */
  color?: string | undefined;
  /** Secondary team color (hex) */
  alt_color?: string | undefined;
  /** Team logo URL */
  logo?: string | undefined;
  /** Team mascot name */
  mascot?: string | undefined;
  /** Home stadium name */
  venue?: string | undefined;
  /** City, State */
  location?: string | undefined;
}

/**
 * College football game schedule and results
 */
export interface Games {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Season week number */
  week: number;
  /** Season year */
  season: number;
  /** regular, postseason, etc. */
  season_type: string;
  /** Home team abbreviation */
  home_team: string;
  /** Away team abbreviation */
  away_team: string;
  /** Home team final score */
  home_score: number | undefined;
  /** Away team final score */
  away_score: number | undefined;
  /** Game start time */
  start_date: Date | string;
  /** Game completion status */
  completed: boolean | undefined;
  /** Both teams in same conference */
  conference_game: boolean | undefined;
  /** Fantasy scoring eligibility */
  eligible_game: boolean | undefined;
  /** Stadium/venue name */
  venue: string | undefined;
  /** TV network broadcasting */
  tv_coverage: string | undefined;
  /** CFBD/ESPN game ID */
  external_id: string | undefined;
}

/**
 * Data required to create a new games
 */
export interface CreateGames {
  /** Season week number */
  week: number;
  /** Season year */
  season: number;
  /** regular, postseason, etc. */
  season_type: string;
  /** Home team abbreviation */
  home_team: string;
  /** Away team abbreviation */
  away_team: string;
  /** Home team final score */
  home_score: number | undefined;
  /** Away team final score */
  away_score: number | undefined;
  /** Game start time */
  start_date: Date | string;
  /** Stadium/venue name */
  venue: string | undefined;
  /** TV network broadcasting */
  tv_coverage: string | undefined;
  /** CFBD/ESPN game ID */
  external_id: string | undefined;
}

/**
 * Data for updating a games
 */
export interface UpdateGames {
  /** Season week number */
  week?: number | undefined;
  /** Season year */
  season?: number | undefined;
  /** regular, postseason, etc. */
  season_type?: string | undefined;
  /** Home team abbreviation */
  home_team?: string | undefined;
  /** Away team abbreviation */
  away_team?: string | undefined;
  /** Home team final score */
  home_score?: number | undefined;
  /** Away team final score */
  away_score?: number | undefined;
  /** Game start time */
  start_date?: Date | string | undefined;
  /** Game completion status */
  completed?: boolean | undefined;
  /** Both teams in same conference */
  conference_game?: boolean | undefined;
  /** Fantasy scoring eligibility */
  eligible_game?: boolean | undefined;
  /** Stadium/venue name */
  venue?: string | undefined;
  /** TV network broadcasting */
  tv_coverage?: string | undefined;
  /** CFBD/ESPN game ID */
  external_id?: string | undefined;
}

/**
 * AP Top 25 and other poll rankings
 */
export interface Rankings {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Poll week */
  week: number;
  /** Season year */
  season: number;
  /** AP, Coaches, CFP, etc. */
  poll_type: string;
  /** Team abbreviation */
  team: string;
  /** Ranking position */
  rank: number;
  /** Poll points received */
  points: number | undefined;
  /** Number of first place votes */
  first_place_votes: number | undefined;
}

/**
 * Data required to create a new rankings
 */
export interface CreateRankings {
  /** Poll week */
  week: number;
  /** Season year */
  season: number;
  /** AP, Coaches, CFP, etc. */
  poll_type: string;
  /** Team abbreviation */
  team: string;
  /** Ranking position */
  rank: number;
  /** Poll points received */
  points: number | undefined;
  /** Number of first place votes */
  first_place_votes: number | undefined;
}

/**
 * Data for updating a rankings
 */
export interface UpdateRankings {
  /** Poll week */
  week?: number | undefined;
  /** Season year */
  season?: number | undefined;
  /** AP, Coaches, CFP, etc. */
  poll_type?: string | undefined;
  /** Team abbreviation */
  team?: string | undefined;
  /** Ranking position */
  rank?: number | undefined;
  /** Poll points received */
  points?: number | undefined;
  /** Number of first place votes */
  first_place_votes?: number | undefined;
}

/**
 * Fantasy football leagues
 */
export interface Leagues {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** League name */
  name: string;
  /** Commissioner user ID */
  commissioner: string;
  /** League season year */
  season: number;
  /** Maximum teams allowed */
  maxTeams: number;
  /** Current number of teams */
  currentTeams: number | undefined;
  /** snake, auction, keeper */
  draftType: string;
  /** standard, ppr, superflex */
  gameMode: string;
  /** recruiting, drafting, active, completed */
  status: string;
  /** Public league (searchable) */
  isPublic: boolean | undefined;
  /** Draft pick time limit */
  pickTimeSeconds: number | undefined;
  /** Scoring configuration JSON */
  scoringRules: string | undefined;
  /** Scheduled draft date */
  draftDate: Date | string | undefined;
  /** Actual draft start time */
  draftStartedAt: Date | string | undefined;
  /** Additional league settings JSON */
  settings: string | undefined;
}

/**
 * Data required to create a new leagues
 */
export interface CreateLeagues {
  /** League name */
  name: string;
  /** Commissioner user ID */
  commissioner: string;
  /** League season year */
  season: number;
  /** Maximum teams allowed */
  maxTeams: number;
  /** snake, auction, keeper */
  draftType: string;
  /** standard, ppr, superflex */
  gameMode: string;
  /** recruiting, drafting, active, completed */
  status: string;
  /** Scoring configuration JSON */
  scoringRules: string | undefined;
  /** Scheduled draft date */
  draftDate: Date | string | undefined;
  /** Actual draft start time */
  draftStartedAt: Date | string | undefined;
  /** Additional league settings JSON */
  settings: string | undefined;
}

/**
 * Data for updating a leagues
 */
export interface UpdateLeagues {
  /** League name */
  name?: string | undefined;
  /** Commissioner user ID */
  commissioner?: string | undefined;
  /** League season year */
  season?: number | undefined;
  /** Maximum teams allowed */
  maxTeams?: number | undefined;
  /** Current number of teams */
  currentTeams?: number | undefined;
  /** snake, auction, keeper */
  draftType?: string | undefined;
  /** standard, ppr, superflex */
  gameMode?: string | undefined;
  /** recruiting, drafting, active, completed */
  status?: string | undefined;
  /** Public league (searchable) */
  isPublic?: boolean | undefined;
  /** Draft pick time limit */
  pickTimeSeconds?: number | undefined;
  /** Scoring configuration JSON */
  scoringRules?: string | undefined;
  /** Scheduled draft date */
  draftDate?: Date | string | undefined;
  /** Actual draft start time */
  draftStartedAt?: Date | string | undefined;
  /** Additional league settings JSON */
  settings?: string | undefined;
}

/**
 * Fantasy team rosters within leagues
 */
export interface Rosters {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** League document ID */
  leagueId: string;
  /** Team owner user ID */
  userId: string;
  /** Fantasy team name */
  teamName: string;
  /** Team abbreviation */
  abbreviation: string | undefined;
  /** Draft order position */
  draftPosition: number | undefined;
  /** Season wins */
  wins: number | undefined;
  /** Season losses */
  losses: number | undefined;
  /** Season ties */
  ties: number | undefined;
  /** Total points scored */
  pointsFor: number | undefined;
  /** Total points allowed */
  pointsAgainst: number | undefined;
  /** Roster player IDs JSON array */
  players: string | undefined;
  /** Active lineup JSON */
  lineup: string | undefined;
  /** Bench players JSON */
  bench: string | undefined;
}

/**
 * Data required to create a new rosters
 */
export interface CreateRosters {
  /** League document ID */
  leagueId: string;
  /** Team owner user ID */
  userId: string;
  /** Fantasy team name */
  teamName: string;
  /** Team abbreviation */
  abbreviation: string | undefined;
  /** Draft order position */
  draftPosition: number | undefined;
  /** Roster player IDs JSON array */
  players: string | undefined;
  /** Active lineup JSON */
  lineup: string | undefined;
  /** Bench players JSON */
  bench: string | undefined;
}

/**
 * Data for updating a rosters
 */
export interface UpdateRosters {
  /** League document ID */
  leagueId?: string | undefined;
  /** Team owner user ID */
  userId?: string | undefined;
  /** Fantasy team name */
  teamName?: string | undefined;
  /** Team abbreviation */
  abbreviation?: string | undefined;
  /** Draft order position */
  draftPosition?: number | undefined;
  /** Season wins */
  wins?: number | undefined;
  /** Season losses */
  losses?: number | undefined;
  /** Season ties */
  ties?: number | undefined;
  /** Total points scored */
  pointsFor?: number | undefined;
  /** Total points allowed */
  pointsAgainst?: number | undefined;
  /** Roster player IDs JSON array */
  players?: string | undefined;
  /** Active lineup JSON */
  lineup?: string | undefined;
  /** Bench players JSON */
  bench?: string | undefined;
}

/**
 * Weekly fantasy lineups
 */
export interface Lineups {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Roster document ID */
  rosterId: string;
  /** Week number */
  week: number;
  /** Season year */
  season: number;
  /** Starting lineup player IDs JSON */
  lineup: string | undefined;
  /** Bench player IDs JSON */
  bench: string | undefined;
  /** Total lineup points scored */
  points: number | undefined;
  /** Lineup locked for scoring */
  locked: boolean | undefined;
}

/**
 * Data required to create a new lineups
 */
export interface CreateLineups {
  /** Roster document ID */
  rosterId: string;
  /** Week number */
  week: number;
  /** Season year */
  season: number;
  /** Starting lineup player IDs JSON */
  lineup: string | undefined;
  /** Bench player IDs JSON */
  bench: string | undefined;
}

/**
 * Data for updating a lineups
 */
export interface UpdateLineups {
  /** Roster document ID */
  rosterId?: string | undefined;
  /** Week number */
  week?: number | undefined;
  /** Season year */
  season?: number | undefined;
  /** Starting lineup player IDs JSON */
  lineup?: string | undefined;
  /** Bench player IDs JSON */
  bench?: string | undefined;
  /** Total lineup points scored */
  points?: number | undefined;
  /** Lineup locked for scoring */
  locked?: boolean | undefined;
}

/**
 * Auction draft sessions
 */
export interface Auctions {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** League document ID */
  leagueId: string;
  /** pending, active, paused, completed */
  status: string;
  /** Current player being auctioned */
  currentNomination: string | undefined;
  /** Team that nominated player */
  nominatingTeam: string | undefined;
  /** Current highest bid amount */
  currentBid: number | undefined;
  /** Team with current high bid */
  biddingTeam: string | undefined;
  /** When current auction expires */
  auctionEndTime: Date | string | undefined;
  /** Auction configuration JSON */
  settings: string | undefined;
}

/**
 * Data required to create a new auctions
 */
export interface CreateAuctions {
  /** League document ID */
  leagueId: string;
  /** pending, active, paused, completed */
  status: string;
  /** Current player being auctioned */
  currentNomination: string | undefined;
  /** Team that nominated player */
  nominatingTeam: string | undefined;
  /** Team with current high bid */
  biddingTeam: string | undefined;
  /** When current auction expires */
  auctionEndTime: Date | string | undefined;
  /** Auction configuration JSON */
  settings: string | undefined;
}

/**
 * Data for updating a auctions
 */
export interface UpdateAuctions {
  /** League document ID */
  leagueId?: string | undefined;
  /** pending, active, paused, completed */
  status?: string | undefined;
  /** Current player being auctioned */
  currentNomination?: string | undefined;
  /** Team that nominated player */
  nominatingTeam?: string | undefined;
  /** Current highest bid amount */
  currentBid?: number | undefined;
  /** Team with current high bid */
  biddingTeam?: string | undefined;
  /** When current auction expires */
  auctionEndTime?: Date | string | undefined;
  /** Auction configuration JSON */
  settings?: string | undefined;
}

/**
 * Auction bid history
 */
export interface Bids {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Auction document ID */
  auctionId: string;
  /** Player being bid on */
  playerId: string;
  /** Bidding team roster ID */
  teamId: string;
  /** Bid amount */
  amount: number;
  /** When bid was placed */
  timestamp: Date | string;
  /** Final winning bid flag */
  isWinning: boolean | undefined;
}

/**
 * Data required to create a new bids
 */
export interface CreateBids {
  /** Auction document ID */
  auctionId: string;
  /** Player being bid on */
  playerId: string;
  /** Bidding team roster ID */
  teamId: string;
  /** Bid amount */
  amount: number;
  /** When bid was placed */
  timestamp: Date | string;
}

/**
 * Data for updating a bids
 */
export interface UpdateBids {
  /** Auction document ID */
  auctionId?: string | undefined;
  /** Player being bid on */
  playerId?: string | undefined;
  /** Bidding team roster ID */
  teamId?: string | undefined;
  /** Bid amount */
  amount?: number | undefined;
  /** When bid was placed */
  timestamp?: Date | string | undefined;
  /** Final winning bid flag */
  isWinning?: boolean | undefined;
}

/**
 * Game-by-game player statistics
 */
export interface PlayerStats {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Player document ID */
  playerId: string;
  /** Game document ID */
  gameId: string;
  /** Week number */
  week: number;
  /** Season year */
  season: number;
  /** Opponent team abbreviation */
  opponent: string | undefined;
  /** Fantasy points earned */
  fantasy_points: number | undefined;
  /** Detailed game statistics JSON */
  stats: string | undefined;
  /** Counts toward fantasy scoring */
  eligible: boolean | undefined;
}

/**
 * Data required to create a new player stats
 */
export interface CreatePlayerStats {
  /** Player document ID */
  playerId: string;
  /** Game document ID */
  gameId: string;
  /** Week number */
  week: number;
  /** Season year */
  season: number;
  /** Opponent team abbreviation */
  opponent: string | undefined;
  /** Detailed game statistics JSON */
  stats: string | undefined;
}

/**
 * Data for updating a player stats
 */
export interface UpdatePlayerStats {
  /** Player document ID */
  playerId?: string | undefined;
  /** Game document ID */
  gameId?: string | undefined;
  /** Week number */
  week?: number | undefined;
  /** Season year */
  season?: number | undefined;
  /** Opponent team abbreviation */
  opponent?: string | undefined;
  /** Fantasy points earned */
  fantasy_points?: number | undefined;
  /** Detailed game statistics JSON */
  stats?: string | undefined;
  /** Counts toward fantasy scoring */
  eligible?: boolean | undefined;
}

/**
 * Application users
 */
export interface Users {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Appwrite Auth user ID */
  authId: string;
  /** User email address */
  email: string;
  /** Display name */
  displayName: string | undefined;
  /** Profile picture URL */
  avatarUrl: string | undefined;
  /** User preferences JSON */
  preferences: string | undefined;
  /** User statistics JSON */
  stats: string | undefined;
  /** Last login/activity time */
  lastActive: Date | string | undefined;
}

/**
 * Data required to create a new users
 */
export interface CreateUsers {
  /** Appwrite Auth user ID */
  authId: string;
  /** User email address */
  email: string;
  /** Display name */
  displayName: string | undefined;
  /** Profile picture URL */
  avatarUrl: string | undefined;
  /** User preferences JSON */
  preferences: string | undefined;
  /** User statistics JSON */
  stats: string | undefined;
  /** Last login/activity time */
  lastActive: Date | string | undefined;
}

/**
 * Data for updating a users
 */
export interface UpdateUsers {
  /** Appwrite Auth user ID */
  authId?: string | undefined;
  /** User email address */
  email?: string | undefined;
  /** Display name */
  displayName?: string | undefined;
  /** Profile picture URL */
  avatarUrl?: string | undefined;
  /** User preferences JSON */
  preferences?: string | undefined;
  /** User statistics JSON */
  stats?: string | undefined;
  /** Last login/activity time */
  lastActive?: Date | string | undefined;
}

/**
 * System activity and audit trail
 */
export interface ActivityLog {
  $id: string;
  $collectionId: string;
  $databaseId: string;
  $createdAt: string;
  $updatedAt: string;
  $permissions: string[];

  /** Acting user ID */
  userId: string | undefined;
  /** Related league ID */
  leagueId: string | undefined;
  /** Action performed */
  action: string;
  /** Action details JSON */
  details: string | undefined;
  /** When action occurred */
  timestamp: Date | string;
  /** User IP address */
  ip_address: string | undefined;
  /** User browser/client info */
  user_agent: string | undefined;
}

/**
 * Data required to create a new activity log
 */
export interface CreateActivityLog {
  /** Acting user ID */
  userId: string | undefined;
  /** Related league ID */
  leagueId: string | undefined;
  /** Action performed */
  action: string;
  /** Action details JSON */
  details: string | undefined;
  /** When action occurred */
  timestamp: Date | string;
  /** User IP address */
  ip_address: string | undefined;
  /** User browser/client info */
  user_agent: string | undefined;
}

/**
 * Data for updating a activity log
 */
export interface UpdateActivityLog {
  /** Acting user ID */
  userId?: string | undefined;
  /** Related league ID */
  leagueId?: string | undefined;
  /** Action performed */
  action?: string | undefined;
  /** Action details JSON */
  details?: string | undefined;
  /** When action occurred */
  timestamp?: Date | string | undefined;
  /** User IP address */
  ip_address?: string | undefined;
  /** User browser/client info */
  user_agent?: string | undefined;
}

/**
 * Collection name constants
 */
export const COLLECTIONS = {
  COLLEGE_PLAYERS: 'college_players' as const,
  TEAMS: 'teams' as const,
  GAMES: 'games' as const,
  RANKINGS: 'rankings' as const,
  LEAGUES: 'leagues' as const,
  USER_TEAMS: 'user_teams' as const,
  LINEUPS: 'lineups' as const,
  AUCTIONS: 'auctions' as const,
  BIDS: 'bids' as const,
  PLAYER_STATS: 'player_stats' as const,
  USERS: 'users' as const,
  ACTIVITY_LOG: 'activity_log' as const,
} as const;

/**
 * Type-safe collection names
 */
export type CollectionName = keyof typeof COLLECTIONS;
export type CollectionId = typeof COLLECTIONS[CollectionName];

/**
 * Common enum types derived from schema
 */
export type LeagueStatus = 'recruiting' | 'drafting' | 'active' | 'completed';
export type DraftType = 'snake' | 'auction' | 'keeper';
export type GameMode = 'standard' | 'ppr' | 'superflex';
export type AuctionStatus = 'pending' | 'active' | 'paused' | 'completed';
export type PlayerPosition = 'QB' | 'RB' | 'WR' | 'TE' | 'K' | 'DEF';
export type Conference = 'SEC' | 'ACC' | 'Big 12' | 'Big Ten';
export type PlayerYear = 'FR' | 'SO' | 'JR' | 'SR';

